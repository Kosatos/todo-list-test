(()=>{"use strict";function t(t){t.reset(),t.classList.contains("show")&&t.classList.remove("show")}function e(){this.editFormLayout='<form class="app__edit-form edit-form" id="edit-form">\n\t<textarea type="text" class="edit-form__input edit-name" id="edit-name" readonly></textarea>\n\n\t<textarea type="text" class="edit-form__input edit-note" id="edit-note" readonly></textarea>\n\n\t<div class="edit-form__date">\n\n\t\t<div class="edit-form__created">Created <span class="edit-form__create-date"\n\t\t\t\tid="create-date"></span>\n\t\t</div>\n\n\t\t<div class="edit-form__deadline">To be completed by <input type="date"\n\t\t\t\tclass="edit-form__input edit-deadline" id="edit-deadline" readonly></input>\n\t\t</div>\n\n\t</div>\n\n\t<div class=" edit-form__buttons">\n\t\t<button class="app__btn edit-form__btn" id="start-btn">Get started</button>\n\t\t<button class="app__btn edit-form__btn" id="edit-btn">Edit</button>\n\t</div>\n</form>',document.querySelector(".app__component-right").innerHTML=this.editFormLayout,this.editForm=document.getElementById("edit-form"),this.editForm.classList.add("show"),this.editNameInput=document.getElementById("edit-name"),this.editNoteInput=document.getElementById("edit-note"),this.editDeadlineInput=document.getElementById("edit-deadline"),this.createDateEl=document.getElementById("create-date"),this.getStartedBtn=document.getElementById("start-btn"),this.editBtn=document.getElementById("edit-btn")}class s{constructor(t){this.name=t.name,this.note=null==t?void 0:t.note,this.date=new Date,this.deadline=null==t?void 0:t.deadline,this.status="pending"}renderTask(){return this.taskEl=document.createElement("li"),this.taskEl.className="todo-list__item todo-list-item",this.taskNameEl=document.createElement("h4"),this.taskNameEl.textContent=this.name,this.taskNameEl.className="todo-list-item__name",this.taskControllersEl=document.createElement("div"),this.taskControllersEl.className="todo-list-item__controllers",this.taskCompleteEl=document.createElement("div"),this.taskCompleteEl.className="todo-list-item__controller task-complete-btn",this.taskDeleteEl=document.createElement("div"),this.taskDeleteEl.className="todo-list-item__controller task-delete-btn",this.taskControllersEl.appendChild(this.taskCompleteEl),this.taskControllersEl.appendChild(this.taskDeleteEl),this.taskEl.appendChild(this.taskNameEl),this.taskEl.appendChild(this.taskControllersEl),this.taskEl.addEventListener("click",(t=>{t.target!=this.taskDeleteEl&&t.target!=this.taskCompleteEl&&this.renderEditForm()})),this.taskCompleteEl.addEventListener("click",(()=>{this.completeBtnListener()})),this.taskDeleteEl.addEventListener("click",(()=>{this.deleteBtnListener()})),this.taskEl}renderEditForm(){e.call(this),this.editNameInput.value=this.name,this.editNoteInput.value=this.note&&""!==this.note?this.note:"There are no notes.",this.editDeadlineInput.value=this.deadline?this.deadline:"There is no deadline.",this.createDateEl.textContent=this.formatDate(this.date),this.getStartedBtn.disabled="complete"===this.status||"process"===this.status,this.editBtn.addEventListener("click",(t=>{t.preventDefault(),this.editTask()})),this.getStartedBtn.addEventListener("click",(t=>{t.preventDefault(),this.getStartedBtnListener(),this.getStartedBtn.disabled=!0}))}editTask(){this.editBtn&&("Edit"!==this.editBtn.textContent?(this.name=this.editNameInput&&""!==this.editNameInput?this.editNameInput.value:"Untitled",this.note=this.editNoteInput&&""!==this.editNoteInput?this.editNoteInput.value:"There are no notes.",this.deadline=this.editDeadlineInput?this.editDeadlineInput.value:"There is no deadline.",this.taskNameEl&&(this.taskNameEl.textContent=this.name),this.saveOrEditEl("readonly","Edit")):this.saveOrEditEl(!1,"Save"))}getStartedBtnListener(){this.taskEl&&"pending"===this.status&&(this.taskEl.classList.add("task-process"),this.status="process")}completeBtnListener(){if(this.taskEl){if("complete"===this.status&&this.taskEl.classList.contains("task-complete"))return this.taskEl.classList.toggle("task-complete"),this.status="pending",void(this.getStartedBtn&&(this.getStartedBtn.disabled=!1));"process"===this.status&&this.taskEl.classList.contains("task-process")&&this.taskEl.classList.toggle("task-process"),this.getStartedBtn&&(this.getStartedBtn.disabled=!0),this.taskEl.classList.toggle("task-complete"),this.status="complete"}}deleteBtnListener(){this.taskEl&&(this.taskEl.remove(),this.status="deleted",this.editForm&&t(this.editForm))}saveOrEditEl(t,e){[this.editNameInput,this.editNoteInput,this.editDeadlineInput].forEach((s=>{s&&(s.readOnly=t,"Save"===e?s.classList.add("edit"):s.classList.remove("edit"))})),this.editBtn.textContent=e}formatDate(t){return`${t.getDate()<10?`0${t.getDate()}`:t.getDate()}.${t.getMonth()<10?`0${t.getMonth()}`:this.date.getMonth()}.${String(t.getFullYear())}`}hideEl(t){t&&t.classList.add("hidden")}showEl(t){t&&t.classList.remove("hidden")}}class i{constructor(t,e,s){this.popup=document.getElementById(t),this.overlay=document.getElementById(e),this.closeItem=document.getElementById(s),this.overlay.addEventListener("click",(()=>this.closePopup())),this.closeItem.addEventListener("click",(()=>this.closePopup()))}closePopup(){this.popup.classList.contains("show")&&this.popup.classList.toggle("show")}showPopup(){this.popup.classList.contains("show")||this.popup.classList.toggle("show")}}window.onload=()=>{const e=[];!function(t){const e=t.querySelector(".grab");e&&e.addEventListener("mousedown",(function(e){e.preventDefault();const s=e.pageX,i=t.offsetWidth;function n(e){t.style.width=i+(e.pageX-s)+"px"}document.body.addEventListener("mousemove",n),document.body.addEventListener("mouseup",(function(){document.body.removeEventListener("mousemove",n)}))}))}(document.querySelector(".app__component-left"));const n=document.getElementById("todo-list"),a=document.getElementById("add-task-btn"),d=document.getElementById("create-form"),o=d.querySelector(".create-form__alert"),l=document.getElementById("search-form"),r=document.getElementById("search-input"),c=new i("create-task-popup","cancel-popup","close-popup");function h(i,a,o){const l=new s({name:i,note:a,deadline:o});e.push(l),n.appendChild(l.renderTask()),c.closePopup(),t(d)}t(d),t(l),[{name:"Оставить отклик на вакансию",note:"JS-разработчик",deadline:"2022-08-02"},{name:"Сделать приложение TODO для тестового задания",note:"●\tПриложение должно включать в себя минимум два основных компонента (примерный вид приложения см. на рисунке выше):\n\t  1)\tВертикальный список с наименованиями заметок TODO;\n\t  2)\tОбласть взаимодействия заметки TODO.\n\t  ●\tРеализовать возможность добавления, редактирования и удаления заметок TODO;\n\t  ●\tОбрезать конец наименования заметки TODO “…”, если имя не влезает в вертикальный список наименований заметок TODO.\n\t  ",deadline:"2022-08-16"},{name:"Досмотреть третью серию Тед Лассо",note:"Остановился на 30:11"},{name:"Изучить ReactJS",deadline:"2022-09-10"},{name:"Изучить PHP",deadline:"2022-10-10"},{name:"Сделать курсовую работу по JS",note:"Продвинутый JavaScript",deadline:"2022-08-28"},{name:"Уволиться со старой работы",deadline:"2022-08-31"},{name:"Съездить в Москву",note:"Билеты взять на 27 число",deadline:"2022-08-30"}].forEach((t=>h(t.name,t.note,t.deadline))),a.addEventListener("click",(()=>{c.showPopup(),o.classList.remove("show")})),d.addEventListener("submit",(t=>{t.preventDefault();const e=document.getElementById("create-task-name").value,s=document.getElementById("create-task-note").value,i=document.getElementById("create-task-deadline").value;if(""===e)return o.textContent="Required field",void o.classList.add("show");h(e,s,i)})),r.addEventListener("input",(()=>{const t=r.value.toLowerCase();!function(t,e){t.forEach((t=>-1!==t.name.toLowerCase().search(e.toLowerCase())?t.showEl(t.taskEl):t.hideEl(t.taskEl)))}(e,t)}))}})();
//# sourceMappingURL=main.js.map